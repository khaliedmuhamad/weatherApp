{"version":3,"sources":["covers/CloudySunset.mp4","covers/rain.mp4","covers/cloudy.mp4","covers/snowy.mp4","covers/thunder.mp4","covers/clear.mp4","App.js","reportWebVitals.js","index.js"],"names":["apiWeather","App","useState","query","setQuery","state","src","rain","clouds","snowy","thunder","clear","covers","root","coverSrc","setCoverSrc","weather","setWeather","plateform","link","iSocial","useEffect","main","found","find","el","console","log","toString","search","e","a","key","fetch","then","res","json","result","go","className","autoPlay","muted","loop","Math","round","temp","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","icon","alt","href","rel","target","map","i","n","type","placeholder","onChange","value","onKeyPress","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27d34335.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CloudySunset.ebe308ab.mp4\";","export default __webpack_public_path__ + \"static/media/rain.6e21349c.mp4\";","export default __webpack_public_path__ + \"static/media/cloudy.e473d617.mp4\";","export default __webpack_public_path__ + \"static/media/snowy.85b9aacf.mp4\";","export default __webpack_public_path__ + \"static/media/thunder.d3f643de.mp4\";","export default __webpack_public_path__ + \"static/media/clear.795a3103.mp4\";","import {useState,useEffect} from 'react';\nimport { MdSearch } from \"react-icons/md\";\n\nimport root from './covers/CloudySunset.mp4';\nimport rain from './covers/rain.mp4';\nimport clouds from './covers/cloudy.mp4';\nimport snowy from './covers/snowy.mp4';\nimport thunder from './covers/thunder.mp4';\nimport clear from './covers/clear.mp4';\n\nimport './App.css';\nimport './AppMedia.css';\n\nconst apiWeather = {\n  key: \"6540ef511a113fdb6d2d31fc378cc985\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\n\n\nexport default function App() {\n  const [query,setQuery] = useState('');\n  const [covers] = useState([\n    {\n      state:'Rain',\n      src:rain,\n    },{\n      state:'Clouds',\n      src:clouds\n    },{\n      state:'Snow',\n      src:snowy\n    },{\n      state:'Thunderstorm',\n      src:thunder\n    },{\n      state:'Clear',\n      src:clear\n    }\n  ]);\n\n  const [coverSrc,setCoverSrc] = useState(root)\n  const [weather,setWeather] = useState({});\n  const [iSocial] = useState([\n    {\n      plateform:'facebook',\n      link:\"https://www.facebook.com/profile.php?id=100008333795144\"\n    },{\n      plateform:'github',\n      link:\"https://github.com/khaliedmuhamad\"\n\n    },{\n      plateform:'linkedin',\n      link:\"https://www.linkedin.com/in/khaled-mohamed-0758781aa/\"\n\n    },{\n      plateform:'twitter',\n      link:\"https://twitter.com/khaledM25324847\"\n\n    },{\n      plateform:'instagram',\n      link:\"https://www.instagram.com/khaled_mumo/\"\n\n    }\n  ])\n \n\n\n\n\n  useEffect(() => {\n  if (typeof weather.main != \"undefined\") {\n  const found = covers.find(el => el.state ===  weather.weather[0].main);\n  setCoverSrc(found.src)\n  console.log(found.src.toString())\n  console.log(typeof found.src.toString())\n  \n}\n  })\n  const search = async e => {\n    if(e.key === 'Enter'){\n\n    await fetch(`${apiWeather.base}weather?q=${query}&units=metric&APPID=${apiWeather.key}`)\n    .then(res => res.json())\n    .then(result => {\n      setWeather(result);\n      setQuery('');\n      console.log(result);\n    });\n}\n}\n\nconst go = async () => \n\n  await fetch(`${apiWeather.base}weather?q=${query}&units=metric&APPID=${apiWeather.key}`)\n  .then(res => res.json())\n  .then(result => {\n    setWeather(result);\n    setQuery('');\n    console.log(result);\n  });\n\n\n  \n\n\n\n\n     \n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n \n  return (\n    <div className=\"App\">\n      <video src={coverSrc} autoPlay className='vid' muted loop></video>\n      <div className='container'>\n         {(typeof weather.main != \"undefined\")\n\n        ?<section className='left'>\n        <div className='brand'>\n          Kotam\n        </div>\n        <div className='information'>\n          <h1 className='deg'>{Math.round(weather.main.temp)}Â°\n          </h1>\n          <div className='info'>\n            <p className='city'>\n              {weather.name},{weather.sys.country}\n            </p>\n            <p className='date'>\n            {dateBuilder(new Date())}\n            </p>\n          </div>\n          <p className='stat'>\n          {weather.weather[0].main}\n          <img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}  alt='weather-icon' />\n          </p>\n        </div>\n        </section>\n        : <div className='before'>\n          <div className='avtar-container'>\n          <a href='https://khalied.netlify.app/' rel='noreferrer' target='_blank' >\n          <img  src='https://avataaars.io/?avatarStyle=Circle&topType=ShortHairDreads02&accessoriesType=Blank&hairColor=Black&facialHairType=Blank&clotheType=ShirtCrewNeck&clotheColor=Gray02&eyeType=Surprised&eyebrowType=DefaultNatural&mouthType=Smile&skinColor=Light'\n                className='avatar'\n                alt='khaled' \n          />\n          </a>\n          </div>\n\n          <h1 className='head'>know the weather of your weekend city</h1>\n           <ul className='list'>\n            {iSocial.map((i,n)=><li className='social-item' key={n}>\n              <a href={i.link} target='_blank' rel='noreferrer' ><i className={`fab fa-${i.plateform} social-icons` }></i></a>\n              </li>)}\n            </ul>\n          </div>}\n        {/* right */}\n      <section className='right'>\n        <header className='header'>\n          <div className='search'>\n            <input\n              type='text'\n              placeholder='Search'\n              className='search-bar'\n              onChange={e => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n              \n              \n\n            />\n           \n          </div>\n          <div className='search-icon' onClick={go} >\n                  <MdSearch />\n          </div>\n        </header>\n        {(typeof weather.main === \"undefined\")\n        ? <div></div> \n        : <div className='side-bar'>\n            <a href='https://khalied.netlify.app/' rel='noreferrer' target='_blank' >\n              <img  src='https://avataaars.io/?avatarStyle=Circle&topType=ShortHairDreads02&accessoriesType=Blank&hairColor=Black&facialHairType=Blank&clotheType=ShirtCrewNeck&clotheColor=Gray02&eyeType=Surprised&eyebrowType=DefaultNatural&mouthType=Smile&skinColor=Light'\n                    className='avatar'\n                    alt='khaled' \n              />\n            </a>\n            <ul className='list'>\n              {iSocial.map((i,n)=>\n              <li className='social-item' key={n}>\n                  <a href={i.link} rel='noreferrer' target='_blank' >\n                    <i className={`fab fa-${i.plateform} social-icons` }></i>\n                  </a>\n              </li>)}\n            </ul>\n          </div>}\n      </section>\n    </div>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}